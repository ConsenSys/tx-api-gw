plugins {
  id 'org.springframework.boot' version '2.3.4.RELEASE'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'com.diffplug.gradle.spotless' version '3.25.0'
  id 'java'
}

group = 'tech.pegasys.net'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

apply plugin: 'com.diffplug.gradle.spotless'

spotless {
  java {
    // This path needs to be relative to each project
    target fileTree('.') {
      include '**/src/*/java/**/*.java'
      exclude '**/.gradle/**'
    }
    removeUnusedImports()
    googleJavaFormat('1.7')
    importOrder 'java', ''
    trimTrailingWhitespace()
    endWithNewline()
  }
  groovyGradle {
    target '*.gradle'
    greclipse().configFile(rootProject.file('gradle/formatter.properties'))
    endWithNewline()
    paddedCell()
  }

  // Below this line are currently only license header tasks
  format 'groovy', { target '**/src/*/grovy/**/*.groovy' }
}

bootJar {
  archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springdoc:springdoc-openapi-ui:1.4.8'
  implementation 'org.web3j:core:5.0.0'
  implementation 'com.squareup.okhttp3:okhttp:4.7.2'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
}

test {
  useJUnitPlatform()
}
